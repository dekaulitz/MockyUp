{
  "openapi": "3.0.2",
  "info": {
    "description": "Testing mockup server",
    "version": "v1.0",
    "title": "Testing Mockup Server",
    "termsOfService": "",
    "contact": {
      "email": "sulaimanfahmi@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://{host}/mocks/mocking/{testing_path}?path=",
      "description": "Testing locally",
      "variables": {
        "host": {
          "default": "localhost:8080"
        },
        "testing_path": {
          "description": "testing id path",
          "default": "5e3aa62f11b5dc7e1bfaa1d6"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "BOOKS",
      "description": "Testing mock server"
    }
  ],
  "security": [
    {
      "Oauth2": [
        "something",
        "somethinsg"
      ]
    }
  ],
  "paths": {
    "/user/login": {
      "description": "user authenticating",
      "post": {
        "tags": [
          "BOOKS"
        ],
        "summary": "",
        "operationId": "",
        "parameters": [
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LOGIN"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user login",
            "content": {
              "application/json": {
                "examples": {
                  "something": {
                    "$ref": "#/components/examples/USER_LOGIN_SUCCESS"
                  },
                  "admin_login": {
                    "$ref": "#/components/examples/USER_LOGIN_ADMIN"
                  }
                }
              }
            }
          }
        },
        "x-mock-request": {
          "mockingRequestPaths": [
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "asdasdasdasdad"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            },
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "123123"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            }
          ],
          "mockingRequestBodies": [
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "asdasdasdasdad"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            }
          ],
          "mockingRequestHeaders": [
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "asdasdasdasdad"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            }
          ],
          "mockingRequestQueries": [
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "asdasdasdasdad"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            }
          ],
          "mockingQueryRequest": [
            {
              "matchingProperty": {
                "description": "",
                "properties": {
                  "id": {
                    "type": "string",
                    "value": "asdasdasdasdad"
                  }
                }
              },
              "response": {
                "statusCode": 200,
                "headers": {
                  "x-something-123": "asdasdasd"
                },
                "content": {
                  "application/json": {
                    "value": {
                      "_id": "asdasdasd12313123",
                      "access": [
                        "READ",
                        "WRITE"
                      ]
                    },
                    "$ref": ""
                  }
                }
              }
            }
          ],
          "mockingDefaultRequest": {
            "response": {
              "statusCode": 200,
              "headers": {
                "x-something-123": "asdasdasd"
              },
              "content": {
                "application/json": {
                  "value": {
                    "_id": "asdasdasd12313123",
                    "access": [
                      "READ",
                      "WRITE"
                    ]
                  },
                  "$ref": ""
                }
              }
            }
          }
        },
        "x-examples": {
          "x-path-including": [
            {
              "property": {
                "name": "CAT_ID",
                "value": "1"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id-deleted": "this is from mock",
                  "x-limiter-deleted": "this is from mocks"
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "BOOK_ID",
                "value": "1"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id-deleted": "this is from mock",
                  "x-limiter-deleted": "this is from mocks"
                },
                "$ref": "#/components/examples/BOOKS_DETAIL",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/BOOKS_DETAIL"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/BOOKS_DETAIL_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "CAT_ID",
                "value": "0"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id-deleted": "this is from mock",
                  "x-limiter-deleted": "this is from mocks"
                },
                "$ref": "#/components/examples/BOOKS_DETAIL",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/BOOKS_DETAIL"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/BOOKS_DETAIL_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "CAT_ID",
                "value": "null"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id-deleted": "this is from mock",
                  "x-limiter-deleted": "this is from mocks"
                },
                "$ref": "#/components/examples/BOOKS_DETAIL",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/BOOKS_DETAIL"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/BOOKS_DETAIL_XML"
                  }
                }
              }
            }
          ],
          "x-body-including": [
            {
              "property": {
                "name": "title",
                "value": "noRef"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-store-noreff": "this is from mocks"
                },
                "$ref": "#/components/examples/BOOKS_FROM_STORE_REF",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/BOOKS_FROM_STORE_REF"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/BOOKS_FROM_STORE_REF_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "title",
                "value": "withRef"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-store-noreff": "this is from mocks"
                },
                "response": {
                  "id": 2,
                  "title": "BOOK_2_THIS IS FROM STORE with reff",
                  "author": "string",
                  "category": [
                    "cat1",
                    "cat2"
                  ],
                  "images": [
                    {
                      "url": "http://any.domain.com/any_image.jpg",
                      "order": 1
                    },
                    {
                      "url": "http://any.domain.com/any_image.jpg",
                      "order": 2
                    }
                  ],
                  "publisher": "string",
                  "publishedDate": "2020-06-13T16:05:04.126Z"
                },
                "content": {
                  "application/json": {
                    "response": {
                      "id": 2,
                      "title": "BOOK_2_THIS IS FROM STORE with reff",
                      "author": "string",
                      "category": [
                        "cat1",
                        "cat2"
                      ],
                      "images": [
                        {
                          "url": "http://any.domain.com/any_image.jpg",
                          "order": 1
                        },
                        {
                          "url": "http://any.domain.com/any_image.jpg",
                          "order": 2
                        }
                      ],
                      "publisher": "string",
                      "publishedDate": "2020-06-13T16:05:04.126Z"
                    }
                  },
                  "application/xml": {
                    "response": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<book>\n\t<id>0</id>\n\t<title>string</title>\n\t<author>string</author>\n\t<category>\n\t\t<category>string</category>\n\t</category>\n\t<images>\n\t\t<image>\n\t\t\t<url>string</url>\n\t\t\t<order>0</order>\n\t\t</image>\n\t</images>\n\t<publisher>string</publisher>\n\t<publishedDate>2020-08-12T16:14:03.009Z</publishedDate>\n</book>"
                  }
                }
              }
            }
          ],
          "x-header-including": [
            {
              "property": {
                "name": "client-id",
                "value": "empty"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY_XML"
                  }
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY"
              }
            },
            {
              "property": {
                "name": "client-id",
                "value": "one"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE_XML"
                  }
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE"
              }
            },
            {
              "property": {
                "name": "client-id",
                "value": "error_400"
              },
              "response": {
                "httpCode": 400,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/ERROR_400"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/ERROR_400_XML"
                  }
                },
                "$ref": "#/components/examples/ERROR_400"
              }
            }
          ],
          "x-query-including": [
            {
              "property": {
                "name": "query",
                "value": "title:empty"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_EMPTY_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "sort",
                "value": "published:asc"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "query",
                "value": "title:one"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE",
                "content": {
                  "application/json": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE"
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE_XML"
                  }
                }
              }
            },
            {
              "property": {
                "name": "query",
                "value": "title:one_no_ref"
              },
              "response": {
                "httpCode": 200,
                "headers": {
                  "x-request-id": "this is from mock",
                  "x-limiter": "this is from mocks"
                },
                "content": {
                  "application/json": {
                    "response": [
                      {
                        "id": 1,
                        "title": "BOOK_1_query response without reff",
                        "author": "string",
                        "category": [
                          "string"
                        ],
                        "images": [
                          {
                            "url": "string",
                            "order": 0
                          }
                        ],
                        "publisher": "string",
                        "publishedDate": "2020-06-13T16:05:04.126Z"
                      }
                    ]
                  },
                  "application/xml": {
                    "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE_XML"
                  }
                },
                "response": [
                  {
                    "id": 1,
                    "title": "BOOK_1_query response without reff",
                    "author": "string",
                    "category": [
                      "string"
                    ],
                    "images": [
                      {
                        "url": "string",
                        "order": 0
                      }
                    ],
                    "publisher": "string",
                    "publishedDate": "2020-06-13T16:05:04.126Z"
                  }
                ]
              }
            }
          ],
          "x-default": {
            "response": {
              "httpCode": 200,
              "headers": {
                "x-request-id": "this is from mock",
                "x-limiter": "this is from mocks"
              },
              "response": [
                {
                  "id": 1,
                  "title": "BOOK_1",
                  "author": "string",
                  "category": [
                    "string"
                  ],
                  "images": [
                    {
                      "url": "string",
                      "order": 0
                    }
                  ],
                  "publisher": "string",
                  "publishedDate": "2020-06-13T16:05:04.126Z"
                },
                {
                  "id": 2,
                  "title": "BOOK_2",
                  "author": "string",
                  "category": [
                    "cat1",
                    "cat2"
                  ],
                  "images": [
                    {
                      "url": "http://any.domain.com/any_image.jpg",
                      "order": 1
                    },
                    {
                      "url": "http://any.domain.com/any_image.jpg",
                      "order": 2
                    }
                  ],
                  "publisher": "string",
                  "publishedDate": "2020-06-13T16:05:04.126Z"
                }
              ],
              "content": {
                "application/json": {
                  "response": [
                    {
                      "id": 1,
                      "title": "BOOK_1",
                      "author": "string",
                      "category": [
                        "string"
                      ],
                      "images": [
                        {
                          "url": "string",
                          "order": 0
                        }
                      ],
                      "publisher": "string",
                      "publishedDate": "2020-06-13T16:05:04.126Z"
                    },
                    {
                      "id": 2,
                      "title": "BOOK_2",
                      "author": "string",
                      "category": [
                        "cat1",
                        "cat2"
                      ],
                      "images": [
                        {
                          "url": "http://any.domain.com/any_image.jpg",
                          "order": 1
                        },
                        {
                          "url": "http://any.domain.com/any_image.jpg",
                          "order": 2
                        }
                      ],
                      "publisher": "string",
                      "publishedDate": "2020-06-13T16:05:04.126Z"
                    }
                  ]
                },
                "application/xml": {
                  "$ref": "#/components/examples/LIST_OF_BOOKS_ONLY_ONE_XML"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LOGIN": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "enum": [
              "username",
              "password"
            ],
            "description": "it can be email or username",
            "example": "sulaimanfahmi@gmail.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "awesome"
          }
        }
      }
    },
    "headers": {
    },
    "parameters": {
    },
    "requestBodies": {
    },
    "responses": {
      "SUCCESS_LOGIN": {
        "description": "response user succeeded authenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "_id"
                },
                "token": {
                  "type": "string",
                  "example": "asd.123123123.123"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "something shit happen",
        "name": "x-auth-token",
        "type": "apiKey",
        "in": "header"
      },
      "Oauth2": {
        "type": "oauth2",
        "description": "login access via oauth 2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://api.example.com/oauth2/authorize",
            "scopes": {
              "read": "read access",
              "write": "write access"
            }
          }
        }
      }
    },
    "callbacks": {
    },
    "links": {
    },
    "examples": {
      "USER_LOGIN_SUCCESS": {
        "description": "example response success",
        "value": {
          "SOMETHING": "something"
        }
      },
      "USER_LOGIN_ADMIN": {
        "description": "example response success",
        "value": {
          "ADMIN": "something",
          "isTrue": true
        }
      }
    },
    "x-database-scehmas": {
      "user_table": {
        "type": "object"
      }
    }
  }
}
